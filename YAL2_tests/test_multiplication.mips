# Début d'un programme
.text
main :
#Initialiser $s7 (registre 7) avec $sp
	move $s7, $sp

# Réserver la place pour 3 variables dans $s7
	add $sp, $sp,-12

# Affectation  b = 12
	li $a0, 12
	sw $a0, -4($s7) # Affectation

# Affectation  a = 2 * 5
	# Operation : 2 * 5
	li $a0, 2

	# Empilement de $a0
	sw $a0, 0($sp)
	add $sp, $sp, -4
	li $a0, 5

	# Dépilement de $a0
	add $sp, $sp, 4
	lw $t8, ($sp)
	mult $t8, $a0 # Multiplication
	mflo $a0 # Pour gérer le dépassement du mot de 32 bits
	sw $a0, 0($s7) # Affectation

# Affectation  a = a * b
	# Operation : a * b
	lw $a0, 0($s7)

	# Empilement de $a0
	sw $a0, 0($sp)
	add $sp, $sp, -4
	lw $a0, -4($s7)

	# Dépilement de $a0
	add $sp, $sp, 4
	lw $t8, ($sp)
	mult $t8, $a0 # Multiplication
	mflo $a0 # Pour gérer le dépassement du mot de 32 bits
	sw $a0, 0($s7) # Affectation

# Affectation  c = 1000000000 * a
	# Operation : 1000000000 * a
	li $a0, 1000000000

	# Empilement de $a0
	sw $a0, 0($sp)
	add $sp, $sp, -4
	lw $a0, 0($s7)

	# Dépilement de $a0
	add $sp, $sp, 4
	lw $t8, ($sp)
	mult $t8, $a0 # Multiplication
	mflo $a0 # Pour gérer le dépassement du mot de 32 bits
	sw $a0, -8($s7) # Affectation

# Ecriture de a
	li $v0, 1
	lw $a0, 0($s7)
	syscall

# Ecriture de c
	li $v0, 1
	lw $a0, -8($s7)
	syscall

# Ecriture de 3 * 4
	li $v0, 1
	# Operation : 3 * 4
	li $a0, 3

	# Empilement de $a0
	sw $a0, 0($sp)
	add $sp, $sp, -4
	li $a0, 4

	# Dépilement de $a0
	add $sp, $sp, 4
	lw $t8, ($sp)
	mult $t8, $a0 # Multiplication
	mflo $a0 # Pour gérer le dépassement du mot de 32 bits
	syscall

# Fin du programme
end :
	li $v0, 10
	syscall
